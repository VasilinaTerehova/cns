{
 "layout": {
  "title": "notifications",
  "rows": [
   {
    "id": "9ff2e6a1-3699-5f47-da20-a0b0ef81b3ae",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "cnsCSS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "${system:../static/custom/css/cns.css}",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     }
    ]
   },
   {
    "id": "fa5ca01a-25a8-094c-a44c-5763bf52546f",
    "type": "BootstrapPanel",
    "typeDesc": "Bootstrap Panel",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapPanelStyle",
      "value": "panel-default",
      "type": "bootstrapPanelStyleCustom"
     }
    ]
   },
   {
    "id": "64f6921a-ae00-16bc-f1c0-e01645bd1618",
    "type": "BootstrapPanelHeader",
    "typeDesc": "Panel Header",
    "parent": "fa5ca01a-25a8-094c-a44c-5763bf52546f",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "cf0c66ce-b97a-2ab4-c45f-6691ee547c4f",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "64f6921a-ae00-16bc-f1c0-e01645bd1618",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "321b0098-df19-b2e7-46a2-d6d45a86c4ae",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "cf0c66ce-b97a-2ab4-c45f-6691ee547c4f",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "10",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "b770a559-88de-9c38-df61-b64f3b37e3ac",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "321b0098-df19-b2e7-46a2-d6d45a86c4ae",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "Notifications ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "4b307595-58b5-bc1f-67b9-5b3f8b9b77b4",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "cf0c66ce-b97a-2ab4-c45f-6691ee547c4f",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationBtnObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "2",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "createNotificationBtnObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "a1abbcbc-d44f-8f8e-0200-ea079e35e655",
    "type": "BootstrapPanelBody",
    "typeDesc": "Panel Body",
    "parent": "fa5ca01a-25a8-094c-a44c-5763bf52546f",
    "properties": [
     {
      "name": "name",
      "value": "tableObj",
      "type": "Id"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "tableObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "1989867e-452a-590c-9e2f-eab16992894d",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationPopupObj",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "691fdb76-ad9f-50b2-8840-21b39266d519",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "1989867e-452a-590c-9e2f-eab16992894d",
    "properties": [
     {
      "name": "name",
      "value": "popupContainer",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "popupContainer",
      "type": "String"
     }
    ]
   },
   {
    "id": "6d18b364-8afb-8b34-2e94-a1e4f4c80a79",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "691fdb76-ad9f-50b2-8840-21b39266d519",
    "properties": [
     {
      "name": "name",
      "value": "popupHeader",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "popupHeader",
      "type": "String"
     }
    ]
   },
   {
    "id": "9f4f140a-8420-8b43-4d23-dd5acde40cdd",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "6d18b364-8afb-8b34-2e94-a1e4f4c80a79",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "ccbb3860-b193-8eac-86c2-1a9c3c1b3cec",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "9f4f140a-8420-8b43-4d23-dd5acde40cdd",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "New Notification ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "2e47619b-5f55-4f60-757a-ec42b0ad7955",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "691fdb76-ad9f-50b2-8840-21b39266d519",
    "properties": [
     {
      "name": "name",
      "value": "popupContent",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "popupContent",
      "type": "String"
     }
    ]
   },
   {
    "id": "a99f7430-3b4a-d5c3-3c19-e38d651ee57e",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "2e47619b-5f55-4f60-757a-ec42b0ad7955",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "3e0a7220-dad1-4b33-7e1d-3326810622a6",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "a99f7430-3b4a-d5c3-3c19-e38d651ee57e",
    "properties": [
     {
      "name": "name",
      "value": "subject",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "subject",
      "type": "String"
     }
    ]
   },
   {
    "id": "72d73c3c-6960-97d2-c539-7e42829e76a0",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "3e0a7220-dad1-4b33-7e1d-3326810622a6",
    "properties": [
     {
      "name": "name",
      "value": "subjectInputObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "subjectInputObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "23fca3b9-f964-ae02-9578-396f30d12f9b",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "a99f7430-3b4a-d5c3-3c19-e38d651ee57e",
    "properties": [
     {
      "name": "name",
      "value": "message",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "message",
      "type": "String"
     }
    ]
   },
   {
    "id": "46044ccd-2159-bf5f-3dfe-4bcaddda0485",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "23fca3b9-f964-ae02-9578-396f30d12f9b",
    "properties": [
     {
      "name": "name",
      "value": "messageInputObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "messageInputObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "83bbc719-86fb-d8a0-f9e2-66b49e175423",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "a99f7430-3b4a-d5c3-3c19-e38d651ee57e",
    "properties": [
     {
      "name": "name",
      "value": "link",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "link",
      "type": "String"
     }
    ]
   },
   {
    "id": "db97de2f-8e9b-e5ba-b927-77f5bc36c434",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "83bbc719-86fb-d8a0-f9e2-66b49e175423",
    "properties": [
     {
      "name": "name",
      "value": "linkInputObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "linkInputObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "187e1d68-196d-c2ed-96d4-fcb8108e368b",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "a99f7430-3b4a-d5c3-3c19-e38d651ee57e",
    "properties": [
     {
      "name": "name",
      "value": "recipient",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "recipient",
      "type": "String"
     }
    ]
   },
   {
    "id": "1e3b6559-ea8f-ff53-a831-f14ca4edee38",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "187e1d68-196d-c2ed-96d4-fcb8108e368b",
    "properties": [
     {
      "name": "name",
      "value": "recipientTypeInputObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "6",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "recipientTypeInputObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "7c416469-fd4d-00b5-1176-c4e683a1cb59",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "187e1d68-196d-c2ed-96d4-fcb8108e368b",
    "properties": [
     {
      "name": "name",
      "value": "recipientNameInputObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "6",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "recipientNameInputObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "7f51f713-7f30-0a99-86bc-4fb20f8d5283",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "691fdb76-ad9f-50b2-8840-21b39266d519",
    "properties": [
     {
      "name": "name",
      "value": "popupFooter",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "popupFooter",
      "type": "String"
     }
    ]
   },
   {
    "id": "41ec0a32-1f9f-1320-0073-a8adc8754ead",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "7f51f713-7f30-0a99-86bc-4fb20f8d5283",
    "properties": [
     {
      "name": "name",
      "value": "popupCancelBtnObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "4",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "popupCancelBtnObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "15c13379-39fa-5395-b7f9-39fc04e5c85a",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "7f51f713-7f30-0a99-86bc-4fb20f8d5283",
    "properties": [
     {
      "name": "name",
      "value": "popupSendBtnObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "8",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "popupSendBtnObj",
      "type": "String"
     }
    ]
   },
   {
    "id": "7be5feb4-cb6d-7ce8-53a7-be1f4255f2d4",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "hiddenElements",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "WDhidden",
      "type": "String"
     }
    ]
   },
   {
    "id": "0cfaf87c-b0d9-979a-70d3-565f35dc644b",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "7be5feb4-cb6d-7ce8-53a7-be1f4255f2d4",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "5b82ee1f-e47e-e3a6-7430-4b413be56f1a",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "0cfaf87c-b0d9-979a-70d3-565f35dc644b",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "bdbc0222-6acf-7f88-19d2-a7525856a6fc",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "5b82ee1f-e47e-e3a6-7430-4b413be56f1a",
    "properties": [
     {
      "name": "name",
      "value": "notificationDetailsHtmlObj",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "tableObj",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": [
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Others",
      "type": "Label"
     }
    ]
   },
   {
    "id": "d5447323-45b6-d7e1-5bdb-957ec9696a3e",
    "type": "ComponentsTable",
    "typeDesc": "table Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "notificationDetailsTable",
      "type": "Id"
     },
     {
      "name": "expandContainerObject",
      "value": "",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "['${p:selectedNotificationId}']",
      "type": "Listeners"
     },
     {
      "name": "oLanguage",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "language",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "colFormats",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "colWidths",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "colHeaders",
      "value": "[\"ID\",\"Date\",\"From\",\"To\",\"Subject\",\"Message\",\"Link\",\"Unread\"]",
      "type": "Array"
     },
     {
      "name": "parameters",
      "value": "[[\"id\",\"selectedNotificationId\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "expandParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "colSortable",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "colTypes",
      "value": "[\"string\",\"string\",\"string\",\"string\",\"string\",\"string\",\"string\",\"string\"]",
      "type": "colTypesCustom"
     },
     {
      "name": "paginate",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "lengthChange",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "filter",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "info",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "sort",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "expandOnClick",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "displayLength",
      "value": "1",
      "type": "Integer"
     },
     {
      "name": "colSearchable",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "drawCallback",
      "value": "function f(){\n    \n    var $tableObjParentTr = $('#notificationDetailsHtmlObj').parents().closest('tr');\n    \n    if( $tableObjParentTr && $tableObjParentTr.hasClass( 'expandingClass' ) ){\n      $tableObjParentTr.attr('class' , 'read' ); // remove 'expandingClass', add only 'read'\n    }\n    \n    // from the notification object, we only want 'Message' and 'Link'\n    \n    // remove id\n    $('#notificationDetailsHtmlObjTable th:first-child').remove();\n    $('#notificationDetailsHtmlObjTable td:first-child').remove();\n    \n    // remove date\n    $('#notificationDetailsHtmlObjTable th:first-child').remove();\n    $('#notificationDetailsHtmlObjTable td:first-child').remove();\n    \n    // remove author\n    $('#notificationDetailsHtmlObjTable th:first-child').remove();\n    $('#notificationDetailsHtmlObjTable td:first-child').remove();\n    \n    // remove rcpt\n    $('#notificationDetailsHtmlObjTable th:first-child').remove();\n    $('#notificationDetailsHtmlObjTable td:first-child').remove();\n    \n     // remove title\n    $('#notificationDetailsHtmlObjTable th:first-child').remove();\n    $('#notificationDetailsHtmlObjTable td:first-child').remove();\n    \n     // remove unread\n    $('#notificationDetailsHtmlObjTable th:last-child').remove();\n    $('#notificationDetailsHtmlObjTable td:last-child').remove();\n    \n    // only 2 left ( the 2 that matter : message and link )\n    \n    // message : do a colspan of 3\n    $('#notificationDetailsHtmlObjTable th:first-child').attr( 'colspan' , '3' );\n    $('#notificationDetailsHtmlObjTable td:first-child').attr( 'colspan' , '3' );\n    \n    // link : do a colspan of 1\n    $('#notificationDetailsHtmlObjTable th:last-child').attr( 'colspan' , '1' );\n    $('#notificationDetailsHtmlObjTable td:last-child').attr( 'colspan' , '1' );\n    \n    // one last thing: if a link has been provided, turn it into href\n    var notification_url = $('#notificationDetailsHtmlObjTable td:last-child').html();\n    \n    if( notification_url ){\n        \n        $('#notificationDetailsHtmlObjTable td:last-child').html(''); // clean inner content\n        $('#notificationDetailsHtmlObjTable td:last-child').append( \"<a class='notification_link' href='\" + notification_url + \"'>click here</a>\" );\n    }\n    \n} ",
      "type": "JavaScript"
     },
     {
      "name": "dataSource",
      "value": "notificationById",
      "type": "Datasource"
     },
     {
      "name": "sDom",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "sortBy",
      "value": "[]",
      "type": "SortByArray"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": "5",
      "type": "Integer"
     },
     {
      "name": "tableStyle",
      "value": "bootstrap",
      "type": "TableStyle"
     },
     {
      "name": "paginationType",
      "value": "simple",
      "type": "PaginationType"
     },
     {
      "name": "htmlObject",
      "value": "${p:notificationDetailsHtmlObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "paginateServerside",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     },
     {
      "name": "extraOptions",
      "value": "[]",
      "type": "OptionArray"
     },
     {
      "name": "clickAction",
      "value": "",
      "type": "JavaScript"
     }
    ]
   },
   {
    "id": "2e300183-f484-426f-393c-66421cf7971a",
    "type": "ComponentsTable",
    "typeDesc": "table Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "notifications",
      "type": "Id"
     },
     {
      "name": "expandContainerObject",
      "value": "notificationDetailsHtmlObj",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "['${p:showFilter}']",
      "type": "Listeners"
     },
     {
      "name": "oLanguage",
      "value": "{\r\n    \"sInfo\": \"<b>_START_</b>–<b>_END_</b> of <b>_TOTAL_</b>\",\r\n    \"sInfoEmpty\": \"\",\r\n    \"sInfoFiltered\": \"\",\r\n} ",
      "type": "JavaScript"
     },
     {
      "name": "language",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "colSortable",
      "value": "[\"false\",\"true\",\"true\",\"true\"]",
      "type": "Array"
     },
     {
      "name": "colFormats",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "colWidths",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "colHeaders",
      "value": "[\"ID\",\"Date\",\"From\",\"Subject\"]",
      "type": "Array"
     },
     {
      "name": "parameters",
      "value": "[[\"filter\",\"showFilter\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "expandParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "colTypes",
      "value": "[\"string\",\"string\",\"string\",\"string\"]",
      "type": "colTypesCustom"
     },
     {
      "name": "paginate",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "lengthChange",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "filter",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "info",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "sort",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "expandOnClick",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "displayLength",
      "value": "10",
      "type": "Integer"
     },
     {
      "name": "colSearchable",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "drawCallback",
      "value": "function f(){\n\n    var placeholder = this.ph;\n    \n    placeholder.find( 'tbody > tr' ).each( function() {\n        \n        // td.column0 holds a compound id of <id>:<unread>\n        var checkboxColumn = $( this ).find( 'td.column0' );\n        \n        // '<id>:<unread>' ( ex: '74:unread', '23:read' )\n        var compoundId = checkboxColumn.text();\n        \n        var delimiter = \":\";\n        \n        var id = compoundId.split( delimiter )[0]; // notification id\n        var unread = compoundId.split( delimiter )[1]; // unread flag\n        \n        $( this ).addClass( unread ); // one of 'read' / 'unread'\n        \n        // ensure td has checkboxColumn class\n        if( !checkboxColumn.hasClass( \"checkboxColumn\" ) ){\n            \n            checkboxColumn.text( '' ); // clear the compoundId text\n            checkboxColumn.addClass( \"checkboxColumn\" );\n            checkboxColumn.attr( \"notification\", id );\n            checkboxColumn.attr( \"unread\", unread );\n            checkboxColumn.attr( \"unread\", unread );\n        }\n        \n        // .. and its child div holds the 'id' and 'unread' attributes\n        if( checkboxColumn.find( \"div.checkbox\" ).length === 0 ){\n            \n            // create the div\n            \n            var $checkboxDiv = $( \"<div class='checkbox' notification='\" + id + \"' unread='\" + unread + \"'></div>\" );\n            \n            // define the click behaviour\n            \n            $checkboxDiv.on( 'click', function( e ) {\n                e.stopPropagation();\n        \n                if( e && e.srcElement.attributes[\"notification\"] ){\n                  \n                    var id = e.srcElement.attributes[\"notification\"].value;\n                    var unread = e.srcElement.attributes[\"unread\"].value;\n                  \n                    var checkboxRow = $(this).closest('tr');\n            \n                    // toggle clicked checkbox's 'checked' class\n                    checkboxRow.toggleClass('checked');\n        \n                    var tbodyCheckboxes = $('tbody tr'),\n                        tbodyCheckboxesLength = tbodyCheckboxes.length,\n                        tbodyCheckboxesChecked = $('tbody tr.checked');\n                        tbodyCheckboxesCheckedLength = tbodyCheckboxesChecked.length;\n        \n                    // if all tbody checkboxes are checked after the click,\n                    // add checked-all class to thead checkbox\n                    if(tbodyCheckboxesLength == tbodyCheckboxesCheckedLength) {\n                        $('thead .checkbox').closest('tr').removeClass('checked-some').addClass('checked-all');\n                    }\n                    \n                    // if only some of the tbody checkboxes are checked after the click,\n                    // add checked-some class to thead checkbox\n                    if(tbodyCheckboxesLength > tbodyCheckboxesCheckedLength && tbodyCheckboxesCheckedLength > 0) {\n                        $('thead .checkbox').closest('tr').removeClass('checked-all').addClass('checked-some');\n                    }\n                    \n                    // if none of the tbody checkboxes are checked after the click,\n                    // remove checked-all and checked-some classes from thead checkbox\n                    if(tbodyCheckboxesCheckedLength === 0) {\n                        $('thead .checkbox').closest('tr').removeClass('checked-some checked-all');\n                    }\n                    \n                    // show buttons interaction\n                    \n                    // if only some of the tbody checkboxes are checked after the click,\n                    // add checked-some class to thead checkbox\n                    if(tbodyCheckboxesCheckedLength > 0) {\n                        placeholder.addClass('show-delete');\n                        if($('tbody tr.checked.read').length > 0 && $('tbody tr.checked.unread').length > 0) {\n                            placeholder.addClass('show-mark-read show-mark-unread');\n                        } else if($('tbody tr.checked.read').length > 0 && $('tbody tr.checked.unread').length == 0) {\n                            placeholder.addClass('show-mark-unread');\n                            placeholder.removeClass('show-mark-read');\n                        } else if($('tbody tr.checked.read').length == 0 && $('tbody tr.checked.unread').length > 0) {\n                            placeholder.addClass('show-mark-read');\n                            placeholder.removeClass('show-mark-unread');\n                        }\n                    } else {\n                        placeholder.removeClass('show-delete show-mark-read show-mark-unread');\n                    }\n                    \n                    return false;\n                }\n              });\n            \n            checkboxColumn.append( $checkboxDiv );\n        }\n        \n    });\n} ",
      "type": "JavaScript"
     },
     {
      "name": "dataSource",
      "value": "notifications",
      "type": "Datasource"
     },
     {
      "name": "sortBy",
      "value": "[[\"1\",\"desc\"]]",
      "type": "SortByArray"
     },
     {
      "name": "sDom",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "tableStyle",
      "value": "bootstrap",
      "type": "TableStyle"
     },
     {
      "name": "paginationType",
      "value": "two_button",
      "type": "PaginationType"
     },
     {
      "name": "htmlObject",
      "value": "${p:tableObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "paginateServerside",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function f(){\n    \n    var placeholder = this.ph;\n    \n    if( !placeholder.find( 'thead > tr > th.column0' ).hasClass( \"checkboxColumn\" ) ){\n        \n        // clear th's text\n        placeholder.find( 'thead > tr > th.column0' ).text('');\n        \n        // add checkboxColumn class\n        placeholder.find( 'thead > tr > th.column0' ).addClass( \"checkboxColumn\" );\n        \n        // add child checkbox div\n        var $headerCheckboxDiv = $( '<div class=\"checkbox\"></div>' );\n        \n        $headerCheckboxDiv.on('click', function() {\n        \n            var checkbox = $(this),\n                checkboxRow = checkbox.closest('tr'),\n                tbodyCheckboxes = $('tbody tr'),\n                tbodyCheckboxesLength = tbodyCheckboxes.length,\n                tbodyCheckboxesChecked = $('tbody tr.checked');\n                tbodyCheckboxesCheckedLength = tbodyCheckboxesChecked.length;\n            \n            // if none of the checkboxes are checked\n            if(tbodyCheckboxesCheckedLength === 0) {\n                checkboxRow.addClass('checked-all');\n                checkboxRow.removeClass('checked-some');\n                // check all checkboxes\n                tbodyCheckboxes.addClass('checked');\n                \n                // show propper action buttons \n                placeholder.addClass('show-delete');\n                if($('tbody tr.checked.read').length > 0 && $('tbody tr.checked.unread').length > 0) {\n                    placeholder.addClass('show-mark-read show-mark-unread');\n                } else if($('tbody tr.checked.read').length > 0 && $('tbody tr.checked.unread').length == 0) {\n                    placeholder.addClass('show-mark-unread');\n                    placeholder.removeClass('show-mark-read');\n                } else if($('tbody tr.checked.read').length == 0 && $('tbody tr.checked.unread').length > 0) {\n                    placeholder.addClass('show-mark-read');\n                    placeholder.removeClass('show-mark-unread');\n                }\n            }\n            \n            // if some of the checkboxes are checked\n            if(tbodyCheckboxesCheckedLength > 0) {\n                checkboxRow.removeClass('checked-some checked-all');\n                \n                // uncheck all checkboxes\n                tbodyCheckboxes.each(function() {\n                    $(this).removeClass('checked');\n                });\n                \n                // hide action buttons \n                placeholder.removeClass('show-delete show-mark-read show-mark-unread');\n            }\n            \n            \n        });\n        \n        placeholder.find( 'thead > tr > th.column0' ).prepend( $headerCheckboxDiv );\n    }\n    \n    // add responsive behaviour to table\n    placeholder.find('table').wrap( \"<div class='table-responsive'></div>\" );\n    \n    // check if actions container exists\n    var actionsContainerAdded = placeholder.find('.actions-container').length > 0;\n    \n    if(!actionsContainerAdded) {\n        // add actions div\n        placeholder.find('.dataTables_wrapper').prepend('<div class=\"actions-container pull-right\"></div>');\n        \n        // add delete button\n        var $deleteButton = $( '<button class=\"delete-button\">Delete</button>' ),\n            $markReadButton = $('<button id=\"markRead\" class=\"markRead\">Mark as read</button>'),\n            $markUnreadButton = $('<button id=\"markUnread\" class=\"markUnread\">Mark as unread</button>');\n        \n         $deleteButton.on('click', function() {\n            \n            var commaSeparatedIds = '';\n            \n            placeholder.find( 'table > tbody > tr.checked' ).each( function() {\n            \n                var checkboxColumn = $( this ).find( 'td.checkboxColumn' );\n                commaSeparatedIds += ( checkboxColumn.attr( 'notification' ) + ',' );\n            });\n            \n            if( commaSeparatedIds.length > 0 ){\n            \n                // remove the last char ( a rogue comma )\n                commaSeparatedIds = commaSeparatedIds.slice(0 , -1 ); \n                \n                $.ajax({\n                type: 'GET',\n                url: '/pentaho/plugin/cns/api/deletenotifications?paramnotifications=' + commaSeparatedIds,\n                success: function ( xhr ) {\n                  render_notifications.update();\n                }\n              });\n            }\n        });\n        \n        placeholder.find('.dataTables_wrapper').prepend('<div class=\"action-buttons-container pull-left\"></div>');\n        placeholder.find('.action-buttons-container').append( $deleteButton )\n                                                     .append( $markReadButton )\n                                                     .append( $markUnreadButton );\n        \n        // add actions selector\n        var actionsSelector = '<div class=\"pull-left actions-selector\">'\n                            + '<div class=\"selector-button\">View <span class=\"selected-text\">All</span></div>'\n                            + '<div class=\"selector-dropdown\">'\n                            + '<button id=\"filterAll\" data-value=\"all\">All</button>'\n                            + '<button id=\"filterRead\" data-value=\"read\">Read</button>'\n                            + '<button id=\"filterUnread\" data-value=\"unread\">Unread</button>'\n                            + '</div>'\n                            + '</div>';\n        placeholder.find('.actions-container').append(actionsSelector);\n        placeholder.find('.selected-text').text(Dashboards.getParameterValue(\"showFilter\"));\n        placeholder.find('.selector-dropdown button[data-value=\"' + Dashboards.getParameterValue(\"showFilter\") + '\"]').addClass('selected');\n        \n        // add actions selector interaction\n        placeholder.find('.actions-container .selector-button').click(function() {\n            $(this).closest('.actions-selector').toggleClass('open');       \n        });\n        \n        // add interaction to mark as read button\n        placeholder.find('#markRead').click(function() {\n            $(this).closest('.actions-selector').toggleClass('open');   \n            \n            var commaSeparatedIds = '';\n            \n            placeholder.find( 'table > tbody > tr.checked' ).each( function() {\n            \n                var checkboxColumn = $( this ).find( 'td.checkboxColumn' );\n                commaSeparatedIds += ( checkboxColumn.attr( 'notification' ) + ',' );\n            });\n            \n            if( commaSeparatedIds.length > 0 ){\n            \n                // remove the last char ( a rogue comma )\n                commaSeparatedIds = commaSeparatedIds.slice(0 , -1 ); \n                \n                $.ajax({\n                type: 'GET',\n                url: '/pentaho/plugin/cns/api/updatenotificationsunreadflag?paramunread=false&paramnotifications=' + commaSeparatedIds,\n                success: function ( xhr ) {\n                  render_notifications.update();\n                }\n              });\n            }\n        });\n        \n        // add interaction to mark as unread button\n        placeholder.find('#markUnread').click(function() {\n            $(this).closest('.actions-selector').toggleClass('open');   \n            \n            var commaSeparatedIds = '';\n            \n            placeholder.find( 'table > tbody > tr.checked' ).each( function() {\n            \n                var checkboxColumn = $( this ).find( 'td.checkboxColumn' );\n                commaSeparatedIds += ( checkboxColumn.attr( 'notification' ) + ',' );\n            });\n            \n            if( commaSeparatedIds.length > 0 ){\n            \n                // remove the last char ( a rogue comma )\n                commaSeparatedIds = commaSeparatedIds.slice(0 , -1 ); \n                \n                $.ajax({\n                type: 'GET',\n                url: '/pentaho/plugin/cns/api/updatenotificationsunreadflag?paramunread=true&paramnotifications=' + commaSeparatedIds,\n                success: function ( xhr ) {\n                  render_notifications.update();\n                }\n              });\n            }\n        });\n        \n        // add interaction to filter buttons\n        placeholder.find('.actions-selector .selector-dropdown button').click(function(e) {\n            var buttonText = $(this).text(),\n                filterParam;\n            $(this).closest('.actions-selector').toggleClass('open');\n            $(this).closest('.actions-selector').find(\".selected-text\")\n                                                .text(buttonText);\n            \n            // update showFilter parameter\n            if(buttonText == \"Unread\") Dashboards.fireChange( \"showFilter\",  \"unread\" );\n            if(buttonText == \"Read\") Dashboards.fireChange( \"showFilter\",  \"read\" );\n            if(buttonText == \"All\") Dashboards.fireChange( \"showFilter\",  \"all\" );\n            \n        });\n        \n        $(document).mouseup(function (e) {\n            var container = $('.actions-selector');\n                    \n            if (!container.is(e.target) // if the target of the click isn't the container...\n                && container.has(e.target).length === 0 ) // ... nor a descendant of the container\n            {\n                container.removeClass('open');\n            }\n        });\n    }\n    \n    // check if paginate container exists\n    var paginateContainerAdded = placeholder.find('.paginate-container').length > 0;\n    \n    if(!actionsContainerAdded) {// add actions div\n        placeholder.find('.dataTables_wrapper').append('<div class=\"paginate-container pull-right clearfix\"></div>');\n        var paginateContainer = placeholder.find('.paginate-container');\n        \n        // move pagination info and pagination into paginate-container\n        placeholder.find(\".dataTables_paginate\").detach().appendTo(paginateContainer);\n        placeholder.find(\".dataTables_info\").detach().appendTo(paginateContainer);\n        \n    }\n    \n    // remove unnecessary 'Search:' text from search label\n    var $filterSearchBox = $( placeholder.find('div#tableObjTable_filter > label') );\n    if( $filterSearchBox && $filterSearchBox[0] && $filterSearchBox[0].firstChild.nodeType == 3 /* Node.TEXT_NODE */ ){\n        $filterSearchBox[0].removeChild( $filterSearchBox[0].firstChild );\n    }    \n    \n    // if no rows are checked, clear action buttons\n    if((placeholder).find('tr.checked').length === 0) {\n        placeholder.removeClass('show-mark-read show-mark-unread show-delete');\n    }\n    \n    // on page change, update:\n        // action buttons,\n        // thead checkbox.\n    placeholder.on( 'draw.dt', function () {\n        placeholder.removeClass('show-delete show-mark-read show-mark-unread');\n        \n        if(placeholder.find('tbody tr.checked').length > 0) {\n            placeholder.addClass('show-delete');\n            if($('tbody tr.checked.read').length > 0 && $('tbody tr.checked.unread').length > 0) {\n                placeholder.addClass('show-mark-read show-mark-unread');\n            } else if($('tbody tr.checked.read').length > 0 && $('tbody tr.checked.unread').length == 0) {\n                placeholder.addClass('show-mark-unread');\n                placeholder.removeClass('show-mark-read');\n            } else if($('tbody tr.checked.read').length == 0 && $('tbody tr.checked.unread').length > 0) {\n                placeholder.addClass('show-mark-read');\n                placeholder.removeClass('show-mark-unread');\n            }\n            \n            if(placeholder.find('tbody tr.checked').length == placeholder.find('tbody tr').length) {\n                placeholder.find('thead tr').removeClass('checked-some').addClass('checked-all');\n            } else {\n                placeholder.find('thead tr').removeClass('checked-all').addClass('checked-some');\n            }\n        } else {\n            placeholder.removeClass('show-delete show-mark-read show-mark-unread');\n            placeholder.find('thead tr').removeClass('checked-all checked-some');\n        }\n    } );\n} ",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     },
     {
      "name": "extraOptions",
      "value": "[]",
      "type": "OptionArray"
     },
     {
      "name": "clickAction",
      "value": "function f( selectedNotificationsRow ){\n    \n    Dashboards.setParameter('selectedNotificationId', '-1'); // reset\n    \n    if( selectedNotificationsRow && selectedNotificationsRow.series ){\n    \n        var notificationId = selectedNotificationsRow.series.split(':')[0];\n        \n        if( notificationId ){\n            \n            Dashboards.setParameter('selectedNotificationId', notificationId );\n            \n            // mark as read\n            $.get( Dashboards.getWebAppPath() + '/plugin/cns/api/updatenotificationsunreadflag?paramunread=false&paramnotifications=' + notificationId );\n            \n            Dashboards.fireChange( 'selectedNotificationId', notificationId );\n        }\n    }\n} ",
      "type": "JavaScript"
     }
    ]
   },
   {
    "id": "54e4f95d-ab50-c0fa-768d-b3ada2f3a7d8",
    "type": "ComponentsbuttonComponent",
    "typeDesc": "Button Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationBtn",
      "type": "Id"
     },
     {
      "name": "label",
      "value": "New notification",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "successCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "expression",
      "value": "function f(e){   \r\n    render_createNotificationPopup.popup($(e.target));\r\n} ",
      "type": "JavaScript"
     },
     {
      "name": "actionParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "failureCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "Datasource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "buttonStyle",
      "value": "themeroller",
      "type": "TableStyle"
     },
     {
      "name": "htmlObject",
      "value": "${p:createNotificationBtnObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "e627d22c-9639-5c50-b3b4-88bda0a690f2",
    "type": "Componentspopup",
    "typeDesc": "Popup Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationPopup",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "gravity",
      "value": "",
      "type": "Gravity"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "draggable",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "horizontalScroll",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "verticalScroll",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "closeOnClickOutside",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "popupClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "popupOverlayClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "htmlObject",
      "value": "createNotificationPopupObj",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "99ce7f23-5d5a-dba6-df02-9b49ecb831c8",
    "type": "ComponentsbuttonComponent",
    "typeDesc": "Button Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationSendBtn",
      "type": "Id"
     },
     {
      "name": "label",
      "value": "Send",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "successCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "expression",
      "value": "function f() {\n    var subject = Dashboards.getParameterValue('subjectText'),\n        message = Dashboards.getParameterValue('messageText'),\n        link = Dashboards.getParameterValue('linkText'),\n        recipientType = Dashboards.getParameterValue('recipientType'),\n        recipient = Dashboards.getParameterValue('recipientNameText'),\n        isFormValid = false;\n        \n    if( recipientType != '' && subject != '' && message != '' ) {\n        if (recipientType != 'All') {\n            if (recipient != '') {\n                isFormValid = true;\n            }\n        } else {\n            isFormValid = true;\n        }\n    }\n    \n    var type = recipientType.toLowerCase();\n    isFormValid = ( 'user' == type || 'role' == type || 'all' == type );\n    \n    console.log('isFormValid? ' + isFormValid);\n    \n    if( isFormValid ){\n    \n        $.ajax({\n            type: \"POST\",\n            url: Dashboards.getWebAppPath() + '/plugin/cns/api/do/notify/' + type,\n            data: {\n                recipient: recipient,\n                notificationType: 'mail', // TODO should this be configurable? \n                title: subject,\n                message: message,\n                link: link\n            },\n            success: function f(){ \n                alert('Notification sent'); // TODO i18n this\n                render_createNotificationPopup.hide();\n                //render_notifications.update();\n            }\n        }); \n    }\n} ",
      "type": "JavaScript"
     },
     {
      "name": "actionParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "failureCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "Datasource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "buttonStyle",
      "value": "themeroller",
      "type": "TableStyle"
     },
     {
      "name": "htmlObject",
      "value": "${p:popupSendBtnObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "968bd5c5-e210-bdaf-9963-2eb9d3b168e8",
    "type": "ComponentsbuttonComponent",
    "typeDesc": "Button Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationCancelBtn",
      "type": "Id"
     },
     {
      "name": "label",
      "value": "Cancel",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "successCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "expression",
      "value": "function f() {\n    // $('.popupComponent input, .popupComponent textarea').val('');\n    render_createNotificationPopup.hide();\n} ",
      "type": "JavaScript"
     },
     {
      "name": "actionParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "failureCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "Datasource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "buttonStyle",
      "value": "themeroller",
      "type": "TableStyle"
     },
     {
      "name": "htmlObject",
      "value": "${p:popupCancelBtnObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "GENERIC",
    "name": "Generic",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Generic",
      "type": "Label"
     }
    ]
   },
   {
    "id": "265078ba-c676-abea-1125-ab324033b703",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "showFilter",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "all",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "52745964-d7a7-6c59-1f92-9a8b726909a2",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "subjectText",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "6e40f610-3934-100a-b009-1e479cf01774",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "messageText",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "6db62b9f-5681-7d6e-1110-d7625ccd2957",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "linkText",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "2589d291-2aa1-911c-0dc2-1d4848b9dd8c",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "recipientType",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "ac50f21b-9901-4709-25f6-a73f2183664d",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "recipientNameText",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "538ec849-1c5a-01c6-eee1-2b2a49c45618",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "selectedNotificationId",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "-1",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "SELECTORS",
    "name": "Selects",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Selects",
      "type": "Label"
     }
    ]
   },
   {
    "id": "b4788f79-eda4-1bf0-e281-a11d66c67967",
    "type": "ComponentstextInput",
    "typeDesc": "Text input Component",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationSubject",
      "type": "Id"
     },
     {
      "name": "parameter",
      "value": "${p:subjectText}",
      "type": "Parameter"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "maxLength",
      "value": "0",
      "type": "Integer"
     },
     {
      "name": "size",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${p:subjectInputObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function f() {\r\n    var placeholder = this.placeholder();\r\n    placeholder.prepend('<div class=\"formLabel\">Subject (required)</div>');\r\n} ",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "fee69633-c20a-459e-5346-ff3be4426693",
    "type": "ComponentstextareaInput",
    "typeDesc": "Textarea input Component",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationMessage",
      "type": "Id"
     },
     {
      "name": "parameter",
      "value": "${p:messageText}",
      "type": "Parameter"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "numRows",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "numColumns",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${p:messageInputObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function f() {\r\n    var placeholder = this.placeholder();\r\n    placeholder.prepend('<div class=\"formLabel\">Message (required)</div>');\r\n} ",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "d5288813-e4ce-c9f3-775c-a91712b88995",
    "type": "ComponentstextInput",
    "typeDesc": "Text input Component",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationLink",
      "type": "Id"
     },
     {
      "name": "parameter",
      "value": "${p:linkText}",
      "type": "Parameter"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "maxLength",
      "value": "0",
      "type": "Integer"
     },
     {
      "name": "size",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${p:linkInputObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function f() {\r\n    var placeholder = this.placeholder();\r\n    placeholder.prepend('<div class=\"formLabel\">Link</div>');\r\n} ",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "5e718505-a021-f8c6-3521-1e9fb0f0af8c",
    "type": "ComponentsSelect",
    "typeDesc": "Select Component",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationRecipientType",
      "type": "Id"
     },
     {
      "name": "parameter",
      "value": "${p:recipientType}",
      "type": "Parameter"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "valueAsId",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "externalPlugin",
      "value": "select2",
      "type": "externalPluginCustom"
     },
     {
      "name": "dataSource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "valuesArray",
      "value": "[[\"All\",\"All\"],[\"Role\",\"Role\"],[\"User\",\"User\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${p:recipientTypeInputObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function f() {\r\n    var placeholder = this.placeholder();\r\n    placeholder.prepend('<div class=\"formLabel\">Recipient Type (required)</div>');\r\n} ",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     },
     {
      "name": "extraOptions",
      "value": "[]",
      "type": "OptionArray"
     }
    ]
   },
   {
    "id": "f9d1adff-c24c-7486-eb08-4d7e00cd7b68",
    "type": "ComponentstextInput",
    "typeDesc": "Text input Component",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "value": "createNotificationRecipientName",
      "type": "Id"
     },
     {
      "name": "parameter",
      "value": "${p:recipientNameText}",
      "type": "Parameter"
     },
     {
      "name": "listeners",
      "value": "['${p:recipientType}']",
      "type": "Listeners"
     },
     {
      "name": "maxLength",
      "value": "0",
      "type": "Integer"
     },
     {
      "name": "size",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${p:recipientNameInputObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function f() {\r\n    var placeholder = this.placeholder(),\r\n        recipientType = Dashboards.getParameterValue('recipientType'),\r\n        labelExists = placeholder.find('.formLabel').length > 0 ? true : false;\r\n    \r\n    if(recipientType == \"All\") {\r\n        placeholder.hide();\r\n    }\r\n    \r\n    if(recipientType == \"Role\") {\r\n        placeholder.show();\r\n        if(!labelExists) {\r\n            placeholder.prepend('<div class=\"formLabel\">Role Name (required)</div>');            \r\n        }\r\n    }  \r\n    \r\n    if(recipientType == \"User\") {\r\n        placeholder.show();\r\n        if(!labelExists) {\r\n            placeholder.prepend('<div class=\"formLabel\">User Name (required)</div>');            \r\n        }\r\n    }        \r\n} ",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "SQL",
    "name": "SQL Queries",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "SQL Queries",
      "type": "Label"
     }
    ]
   },
   {
    "id": "0a56c773-c21a-33cb-c9aa-716d1c31731a",
    "type": "Componentssql_sqlJndi",
    "typeDesc": "sql over sqlJndi",
    "meta": "CDA",
    "meta_conntype": "sql.jndi",
    "meta_datype": "sql",
    "parent": "SQL",
    "properties": [
     {
      "name": "name",
      "value": "dummy",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "",
      "type": "Jndi"
     },
     {
      "name": "query",
      "value": "",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "CNP_CPKENDPOINTS",
    "name": "CNP Endpoints",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "CNP Endpoints",
      "type": "Label"
     }
    ]
   },
   {
    "id": "8ac3ba83-2753-1f74-21eb-0fd0b745988d",
    "type": "Componentscns_getNotifications_CPKENDPOINT",
    "typeDesc": "getNotifications Endpoint",
    "parent": "CNP_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "notifications",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "cns",
    "meta_endpoint": "getNotifications"
   },
   {
    "id": "CNS_CPKENDPOINTS",
    "name": "CNS Endpoints",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "CNS Endpoints",
      "type": "Label"
     }
    ]
   },
   {
    "id": "6d78d9ed-8ff3-885e-73fe-70a878198fbc",
    "type": "Componentscns_getNotificationById_CPKENDPOINT",
    "typeDesc": "getNotificationById Endpoint",
    "parent": "CNS_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "notificationById",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "cns",
    "meta_endpoint": "getNotificationById"
   }
  ]
 },
 "filename": "/system/cns/dashboards/notifications.cdfde"
}